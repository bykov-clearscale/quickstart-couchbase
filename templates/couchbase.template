{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Deployment for Couchbase Enterprise",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [{
                "Label": {
                    "default": "Network Configuration"
                },
                "Parameters": [
                    "VPCID",
                    "PublicSubnet1ID",
                    "PublicSubnet2ID",
                    "RemoteAccessCIDR",
                    "VPCID",
                    "VPCCIDR"
                ]
            }, {
                "Label": {
                    "default": "Amazon EC2 Configuration"
                },
                "Parameters": [
                    "KeyName",
                    "InstanceType"
                ]
            }, {
                "Label": {
                    "default": "Couchbase Configuration"
                },
                "Parameters": [
                    "Username",
                    "Password",
                    "ServerDiskSize",
                    "ServerInstanceCount",
                    "SyncGatewayInstanceCount"
                ]
            }, {
                "Label": {
                    "default": "AWS Quick Start Configuration"
                },
                "Parameters": [
                    "QSS3BucketName",
                    "QSS3KeyPrefix"
                ]
            }],
            "ParameterLabels": {

                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet 2 ID"
                },
                "QSS3BucketName": {
                    "defauS3BucketNamelt": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed External Access CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                },
                "KeyName": {
                    "default": "SSH Key Name"
                },
                "Username": {
                    "default": "Couchbase Administrator Username"
                },
                "Password": {
                    "default": "Couchbase Administrator Password"
                },
                "InstanceType": {
                    "default": "Couchbase Instance Type"
                },

                "ServerInstanceCount": {
                    "default": "Couchbase Instance Count"
                },
                "SyncGatewayInstanceCount": {
                    "default": "Number of Couchbase Sync Gateway Nodes"
                }
            }
        }
    },
    "Parameters": {
        "ServerInstanceCount": {
            "Description": "Number of Couchbase Server Nodes",
            "Type": "Number",
            "Default": 4
        },
        "ServerDiskSize": {
            "Description": "Size in GB of the EBS gp2 volume on each Couchbase node",
            "Type": "Number",
            "Default": 100
        },
        "SyncGatewayInstanceCount": {
            "Description": "Number of Couchbase Sync Gateway Nodes",
            "Type": "Number",
            "Default": 2
        },
        "InstanceType": {
            "Description": "Instance type for Couchbase Nodes",
            "Type": "String",
            "Default": "m4.xlarge",
            "AllowedValues": [
                "m4.xlarge"
            ]
        },
        "Username": {
            "Description": "Username for Couchbase administrator",
            "Type": "String"
        },
        "Password": {
            "Description": "Password for Couchbase administrator",
            "Type": "String",
            "NoEcho": true
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-xxxxxxxx)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-xxxxxxxx)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the instances We recommend that you set this value to a trusted IP range.",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "couchbase/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "VPCID": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        }
    },
    "Mappings": {
        "CouchbaseAMI": {
            "us-east-1": {
                "AMI": "ami-c58c1dd3"
            },
            "us-east-2": {
                "AMI": "ami-4191b524"
            },
            "us-west-1": {
                "AMI": "ami-7a85a01a"
            },
            "us-west-2": {
                "AMI": "ami-4836a428"
            },
            "ca-central-1": {
                "AMI": "ami-0bd66a6f"
            },
            "eu-central-1": {
                "AMI": "ami-b968bad6"
            },
            "eu-west-1": {
                "AMI": "ami-01ccc867"
            },
            "eu-west-2": {
                "AMI": "ami-b6daced2"
            },
            "ap-southeast-1": {
                "AMI": "ami-fc5ae39f"
            },
            "ap-southeast-2": {
                "AMI": "ami-162c2575"
            },
            "ap-south-1": {
                "AMI": "ami-52c7b43d"
            },
            "ap-northeast-1": {
                "AMI": "ami-923d12f5"
            },
            "ap-northeast-2": {
                "AMI": "ami-9d15c7f3"
            },
            "sa-east-1": {
                "AMI": "ami-37cfad5b"
            }
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [{
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "CouchbaseELB": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "Subnets": [{
                    "Ref": "PublicSubnet1ID"
                }, {
                    "Ref": "PublicSubnet2ID"
                }],
                "Listeners": [{
                    "LoadBalancerPort": "8091",
                    "InstancePort": "8091",
                    "Protocol": "HTTP",
                    "PolicyNames": [
                        "AppStickinessPolicy"
                    ]
                }],
                "Policies": [

                    {
                        "PolicyName": "AppStickinessPolicy",
                        "PolicyType": "AppCookieStickinessPolicyType",
                        "Attributes": [{
                            "Name": "CookieName",
                            "Value": {
                                "Ref": "AWS::StackName"
                            }
                        }]
                    }
                ],
                "SecurityGroups": [{
                    "Ref": "CouchbaseSecurityGroup"
                }],
                "HealthCheck": {
                    "Target": "HTTP:8091/ui/index.html",
                    "HealthyThreshold": "2",
                    "UnhealthyThreshold": {
                        "Ref": "ServerInstanceCount"
                    },
                    "Interval": "15",
                    "Timeout": "3"
                }
            }
        },
        "ServerAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LoadBalancerNames": [{
                    "Ref": "CouchbaseELB"
                }],
                "LaunchConfigurationName": {
                    "Ref": "ServerLaunchConfiguration"
                },
                "MinSize": {
                    "Ref": "ServerInstanceCount"
                },
                "MaxSize": {
                    "Ref": "ServerInstanceCount"
                },
                "DesiredCapacity": {
                    "Ref": "ServerInstanceCount"
                },
                "VPCZoneIdentifier": [{
                    "Ref": "PublicSubnet1ID"
                }, {
                    "Ref": "PublicSubnet2ID"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "couchbase-server"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }]
            }
        },
        "ServerLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": ["CouchbaseAMI", {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [{
                    "Ref": "CouchbaseSecurityGroup"
                }],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "EbsOptimized": true,
                "IamInstanceProfile": {
                    "Ref": "CouchbaseInstanceProfile"
                },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sdk",
                    "Ebs": {
                        "VolumeSize": {
                            "Ref": "ServerDiskSize"
                        },
                        "VolumeType": "gp2"
                    }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash\n",
                            "echo 'Running startup script...'\n",
                            "adminUsername=", {
                                "Ref": "Username"
                            }, "\n",
                            "adminPassword=", {
                                "Ref": "Password"
                            }, "\n",
                            "baseURL=", {
                                "Fn::Sub": [
                                    "https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}", {
                                        "S3Region": {
                                            "Fn::If": [
                                                "GovCloudCondition",
                                                "s3-us-gov-west-1",
                                                "s3"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "scripts/",
                            "\n",
                            "wget ${baseURL}server.sh\n",
                            "wget ${baseURL}format.sh\n",
                            "wget ${baseURL}installServer.sh\n",
                            "wget ${baseURL}configureServer.sh\n",
                            "chmod +x *.sh\n",
                            "./server.sh ${adminUsername} ${adminPassword}\n"
                        ]]
                    }
                }
            }
        },
        "SyncGatewayAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "SyncGatewayLaunchConfiguration"
                },
                "MinSize": {
                    "Ref": "SyncGatewayInstanceCount"
                },
                "MaxSize": {
                    "Ref": "SyncGatewayInstanceCount"
                },
                "DesiredCapacity": {
                    "Ref": "SyncGatewayInstanceCount"
                },
                "VPCZoneIdentifier": [{
                    "Ref": "PublicSubnet1ID"
                }, {
                    "Ref": "PublicSubnet2ID"
                }],
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "couchbase-sync-gateway"
                            ]
                        ]
                    },
                    "PropagateAtLaunch": "true"
                }]
            }
        },
        "SyncGatewayLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": ["CouchbaseAMI", {
                        "Ref": "AWS::Region"
                    }, "AMI"]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroups": [{
                    "Ref": "CouchbaseSecurityGroup"
                }],
                "KeyName": {
                    "Ref": "KeyName"
                },
                "EbsOptimized": true,
                "IamInstanceProfile": {
                    "Ref": "CouchbaseInstanceProfile"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", [
                            "#!/bin/bash\n",
                            "echo 'Running startup script...'\n",
                            "baseURL=", {
                                "Fn::Sub": [
                                    "https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}", {
                                        "S3Region": {
                                            "Fn::If": [
                                                "GovCloudCondition",
                                                "s3-us-gov-west-1",
                                                "s3"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "scripts/",
                            "\n",
                            "wget ${baseURL}syncGateway.sh\n",
                            "wget ${baseURL}installSyncGateway.sh\n",
                            "wget ${baseURL}configureSyncGateway.sh\n",
                            "chmod +x *.sh\n",
                            "./syncGateway.sh\n"
                        ]]
                    }
                }
            }
        },
        "CouchbaseInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [{
                    "Ref": "CouchbaseRole"
                }]
            }
        },
        "CouchbaseRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["ec2.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Policies": [{
                    "PolicyName": "CouchbasePolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "ec2:DescribeInstances",
                                "autoscaling:DescribeAutoScalingGroups"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        },
        "CouchbaseSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enable SSH and Couchbase Ports",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [{
                    "IpProtocol": "tcp",
                    "FromPort": 22,
                    "ToPort": 22,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 4369,
                    "ToPort": 4369,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 4984,
                    "ToPort": 4985,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 8091,
                    "ToPort": 8094,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 9100,
                    "ToPort": 9105,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 9998,
                    "ToPort": 9999,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 11207,
                    "ToPort": 11215,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 18091,
                    "ToPort": 18093,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": 21100,
                    "ToPort": 21299,
                    "CidrIp": {
                        "Ref": "RemoteAccessCIDR"
                    }
                }, {
                    "IpProtocol": "tcp",
                    "FromPort": "0",
                    "ToPort": "65535",
                    "CidrIp": {
                        "Ref": "VPCCIDR"
                    }
                }]
            }
        }
    },
    "Outputs": {
        "URL": {
            "Description": "The URL of the website",
            "Value": {
                "Fn::Join": ["", ["http://", {
                    "Fn::GetAtt": ["CouchbaseELB", "DNSName"]
                }, ":8091"]]
            }
        }
    }
}